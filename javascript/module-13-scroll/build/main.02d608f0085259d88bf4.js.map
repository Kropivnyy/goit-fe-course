{"version":3,"sources":["webpack:///./js/refs.js","webpack:///./js/api-service.js","webpack:///./js/lightbox.js","webpack:///./js/masonry-service.js","webpack:///./js/infinite-scroll.js","webpack:///./js/get-item-html.js","webpack:///./js/micro-template.js","webpack:///./js/fetch-handling.js","webpack:///./index.js"],"names":["input","document","querySelector","form","findButton","itemTemplate","grid","searchQuery","foundImages","resetResult","this","value","items","lightboxRef","instance","basicLightbox","showModal","event","show","src","target","dataset","source","closeModal","close","findImageIndex","apiService","findIndex","image","urls","regular","changeImage","imageIndex","elem","find","item","index","showNextImage","currentImageIndex","length","showPrevImage","msnry","initMasonry","Masonry","itemSelector","columnWidth","gutter","percentPosition","stagger","visibleStyle","transform","opacity","hiddenStyle","resetMasonry","infScroll","InfiniteScroll","path","baseURL","pageIndex","responseType","outlayer","masonryService","status","history","resetPage","templateHTML","refs","innerHTML","getItemHTML","photo","data","replace","match","key","split","forEach","part","imagesLoaded","proxyElem","createElement","on","res","response","results","JSON","parse","itemsHTML","map","join","querySelectorAll","appendItems","appended","fetchHandling","result","addEventListener","preventDefault","query","toLowerCase","reset","options","loadNextPage","lightbox"],"mappings":"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","file":"main.02d608f0085259d88bf4.js","sourcesContent":["export default {\r\n  input: document.querySelector('#query'),\r\n  form: document.querySelector('#search-form'),\r\n  findButton: document.querySelector('.find-button'),\r\n  itemTemplate: document.querySelector('#photo-item-template'),\r\n  grid: document.querySelector('.grid'),\r\n};\r\n\r\n","export default {\r\n  searchQuery: '',\r\n  foundImages: [],\r\n  resetResult() {\r\n    this.foundImages = [];\r\n  },\r\n  get query() {\r\n    return this.searchQuery;\r\n  },\r\n  set query(value) {\r\n    return (this.searchQuery = value);\r\n  },\r\n  get result() {\r\n    return this.foundImages;\r\n  },\r\n  set result(items) {\r\n    this.foundImages = [...this.foundImages, ...items];\r\n  },\r\n};\r\n","import * as basicLightbox from 'basiclightbox';\r\nimport apiService from './api-service';\r\n\r\nexport default {\r\n  lightboxRef: null,\r\n  instance: basicLightbox.create(\r\n    `<img class=\"lightbox__image\" src=\"\" alt=\"\" />`,\r\n  ),\r\n\r\n  showModal(event) {\r\n    this.instance.show();\r\n    this.lightboxRef = document.querySelector('.lightbox__image');\r\n    this.lightboxRef.src = event.target.dataset.source;\r\n  },\r\n\r\n  closeModal() {\r\n    this.instance.close();\r\n  },\r\n  findImageIndex() {\r\n    return apiService.foundImages.findIndex(\r\n      image => image.urls.regular === this.lightboxRef.src,\r\n    );\r\n  },\r\n  changeImage(imageIndex) {\r\n    const elem = apiService.foundImages.find((item, index) => {\r\n      if (imageIndex === index) return item;\r\n    });\r\n    this.lightboxRef.src = elem.urls.regular;\r\n  },\r\n  showNextImage() {\r\n    let currentImageIndex = this.findImageIndex();\r\n    let nextImageIndex = currentImageIndex + 1;\r\n    nextImageIndex >= apiService.foundImages.length\r\n      ? (currentImageIndex = 0)\r\n      : (currentImageIndex += 1);\r\n    this.changeImage(currentImageIndex);\r\n  },\r\n  showPrevImage() {\r\n    let currentImageIndex = this.findImageIndex();\r\n    let prevImageIndex = currentImageIndex - 1;\r\n    prevImageIndex < 0\r\n      ? (currentImageIndex = apiService.foundImages.length - 1)\r\n      : (currentImageIndex -= 1);\r\n    this.changeImage(currentImageIndex);\r\n  },\r\n};\r\n","import Masonry from 'masonry-layout';\r\n\r\nexport default {\r\n  msnry: {},\r\n  initMasonry() {\r\n    this.msnry = new Masonry('.grid', {\r\n      itemSelector: '.photo-item',\r\n      columnWidth: '.grid__col-sizer',\r\n      gutter: '.grid__gutter-sizer',\r\n      percentPosition: true,\r\n      stagger: 30,\r\n      visibleStyle: { transform: 'translateY(0)', opacity: 1 },\r\n      hiddenStyle: { transform: 'translateY(100px)', opacity: 0 },\r\n    });\r\n  },\r\n  resetMasonry() {\r\n    this.msnry = {};\r\n  },\r\n};\r\n","import InfiniteScroll from 'infinite-scroll';\r\nimport masonryService from './masonry-service';\r\nimport apiService from './api-service';\r\n\r\nconst baseURL = 'https://api.unsplash.com/search/photos';\r\nconst apiKey = 'x9AhgqdVedkj92knzoynGC04XskWUCMDGAsuL6NaIdM';\r\n\r\nconst infScroll = new InfiniteScroll('.grid', {\r\n  path: function () {\r\n    return `${baseURL}?client_id=${apiKey}&query=${apiService.searchQuery}&page=${this.pageIndex}&per_page=12&order_by=popular`;\r\n  },\r\n  responseType: 'text',\r\n  outlayer: masonryService.msnry,\r\n  status: '.page-load-status',\r\n  history: false,\r\n  resetPage() {\r\n    infScroll.pageIndex = 1;\r\n  },\r\n});\r\n\r\nexport { infScroll };\r\n","import refs from './refs';\r\nimport microTemplate from './micro-template';\r\n\r\nconst templateHTML = refs.itemTemplate.innerHTML;\r\n\r\nexport default function getItemHTML(photo) {\r\n  return microTemplate(templateHTML, photo);\r\n}\r\n","export default function microTemplate(src, data) {\r\n  return src.replace(/\\{\\{([\\w\\-_\\.]+)\\}\\}/gi, function (match, key) {\r\n    var value = data;\r\n    key.split('.').forEach(function (part) {\r\n      value = value[part];\r\n    });\r\n    return value;\r\n  });\r\n}\r\n","import { infScroll } from './infinite-scroll';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport getItemHTML from './get-item-html';\r\nimport InfiniteScroll from 'infinite-scroll';\r\nimport masonryService from './masonry-service';\r\n\r\nInfiniteScroll.imagesLoaded = imagesLoaded;\r\nconst proxyElem = document.createElement('div');\r\n\r\nexport default function fetchHandling(response) {\r\n  const { results } = JSON.parse(response);\r\n  const itemsHTML = results.map(getItemHTML).join('');\r\n  proxyElem.innerHTML = itemsHTML;\r\n  const items = proxyElem.querySelectorAll('.photo-item');\r\n  imagesLoaded(items, function () {\r\n    infScroll.appendItems(items);\r\n    masonryService.msnry.appended(items);\r\n  });\r\n  return results;\r\n}\r\n","import './styles.css';\nimport '../node_modules/basiclightbox/dist/basicLightbox.min.css';\nimport refs from './js/refs';\nimport lightbox from './js/lightbox';\nimport apiService from './js/api-service';\nimport fetchHandling from './js/fetch-handling';\nimport masonryService from './js/masonry-service';\nimport { infScroll } from './js/infinite-scroll';\n\ninfScroll.on('load', res => {\n  const data = fetchHandling(res);\n  apiService.result = data;\n});\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  refs.grid.innerHTML =\n    '<div class=\"grid__col-sizer\"></div><div class=\"grid__gutter-sizer\"></div>';\n  masonryService.resetMasonry();\n  masonryService.initMasonry();\n  apiService.query = refs.input.value.toLowerCase();\n  apiService.resetResult();\n  refs.form.reset();\n  infScroll.options.resetPage();\n  infScroll.loadNextPage();\n});\n\nrefs.grid.addEventListener('click', event => {\n  event.preventDefault();\n  lightbox.showModal(event);\n});\ndocument.addEventListener('keyup', event => {\n  event.preventDefault();\n  if (event.key === 'Escape') {\n    lightbox.closeModal();\n  }\n  if (event.key === 'ArrowLeft') {\n    lightbox.showPrevImage();\n  }\n  if (event.key === 'ArrowRight') {\n    lightbox.showNextImage();\n  }\n});\n"],"sourceRoot":""}